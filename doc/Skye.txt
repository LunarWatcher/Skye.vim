*skye* *skye.vim* *skye.txt*

License: MIT
URL: https://github.com/lunarwatcher/skye.vim

Changelog: https://github.com/LunarWatcher/Skye.vim/blob/master/CHANGELOG.md

================================================================================
Table of contents~

    1. Introduction ................................ |skye-introduction|
    2. Adapters .................................... |skye-adapters|
        2.1. GitHub ................................ |skye-github|
    3. Options ..................................... |skye-options|
    4. Commands and maps ........................... |skye-commands-and-maps|
        4.1. Commands .............................. |skye-commands|
        4.2. Maps .................................. |skye-maps|

================================================================================
1. Introduction                                                *skye-introduction*

Skye brings issues into Vim.

Why?~

I was bored and had the brilliant idea to torture myself with HTTP requests and
JSON parsing in interop with VimScript.

What?~

This plugin lets you display issues and issue lists inside Vim.

                                                                  *skye-providers*
Supported providers~

Currently, only GitHub is supported. If you'd like to see other providers
supported, submit a PR.

As a side-note, only public repositories are supported at this time.

The complete list is under |skye-adapters|

Additional navigation advice~

Skye doesn't handle markdown link following, because I already did it in another
plugin: https://github.com/LunarWatcher/Pandora

There may be other plugins that follow links as well (including your markdown
renderer), and these are incredibly useful when following the absolute URLs
included.

================================================================================
2. Adapters                                                        *skye-adapters*

Adapters:
    |skye-github|

--------------------------------------------------------------------------------
2.1. GitHub                                                          *skye-github*

The GitHub adapter parses GitHub SSH and HTTPS URLs into an actionable URL
that's fed to the GitHub API to query issues and comments.

Rate limiting~

If you want access to private repos, or probably more relevant, more than 60
requests per hour, you need a personal access token. Because I can't be arsed to
set up a local webserver for OAuth callback, this means you need to store a
personal access token.

Generate it at: Developer settings -> Personal access tokens -> Generate new token
As far as I know, it shouldn't need any scopes, potentially unless you expect it
to work with private repos.

Then `let g:SkyeGitHubAccessToken = "your token here"` (see: |g:SkyeGitHubAccessToken|)
Since this is a personal access token, it's VERY important that you do NOT
accidentally include the declaration of said variable anywhere public. Sharing
personal access tokens is always a bad idea - use common sense when adding it. I
recommend sourcing a gitignored file if you store your vimrc in a dotfile git
repo.

Personal access tokens (should) give you 5000 API requests per hour, assuming
I've understood stuff correctly. GitHub is not clear on the use of PATs over
OAuth for this context, nor the side-effects in terms of API requests. 

Config note~

Again, there's lots of ways to avoid accidentally exposing your access token.
Personally, I use a system that splits out these sensitive bits (as well as
config that's truly system-specific) into a different file. Again, there's lots
of ways to implement this, but this is one way: https://github.com/LunarWatcher/dotfiles/blob/0e360896c4322d6ffc41372ad0df94ec1f39e723/.vimrc#L987-L999

================================================================================
3. Options                                                          *skye-options*

Table of Contents~

Access tokens and locations~
* |g:SkyeGitHubAccessToken|
* |g:SkyeUpstreamRemote|
* |g:SkyeIssueUrl|

--------------------------------------------------------------------------------
                                                         *g:SkyeGitHubAccessToken*

Type: string
Default: ""

Access token sent with requests to the GitHub API

--------------------------------------------------------------------------------
                                                            *g:SkyeUpstreamRemote*

Type: string
Default: "origin"

The default remote. Used when parsing the output of `git remote -v`. Note that
this doesn't care about branches. Remote names are separate from branch names.

--------------------------------------------------------------------------------
                                                                  *g:SkyeIssueUrl*

Type: string
Default: parses git remote -v at autoload startup

Defines the issue url. This is used internally to parse the repo name (if GH
URL). This can also be manually set instead of being auto-detected, which might
be preferable if your issue system is separate from your remote. Note that this
variable still requires a matching |skye-adapter| for the URL to be possible to
retrieve from.

One example use of this variable is if you have a fork, but want to see issues
for an upstream repo.

================================================================================
4. Commands and keybinds                                  *skye-commands-and-maps*

--------------------------------------------------------------------------------
4.1. Commands                                                      *skye-commands*

Command      | Arguments                                     | Description
------------ | --------------------------------------------- | -----------------
*SkyeList*     | Optional URL; largely for scripting purposes. | Lists issues
             | If not given, uses  |g:SkyeIssueUrl|            |  
*SkyeShow*     | Shows an issue, or tries to parse the token   | Shows issue details
             | under the cursor to try to find an issue ref- |
             | erence. The format is generally #[a-zA-Z0-9]+ |

--------------------------------------------------------------------------------
4.2. Keybinds                                                          *skye-maps*

Normal mode~

*<leader>sl*                Calls |SkyeList| with 0 arguments
*<C-G>*                     Calls |SkyeShow| with 0 arguments

vim:ft=help:tw=80
